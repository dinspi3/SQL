https://artoftesting.com/sql-queries-for-interview#SQL_Query_Interview_Questions_for_Experienced


EmployeeDetails :
=======================================================================
EmpId	FullName	ManagerId	DateOfJoining	 City
121	John Snow	321	    01/31/2014	       Toronto
321	Walter White	986	   01/30/2015	    California
421	Kuldeep Rana	876	   27/11/2016	    New Delhi
======================================================================

EmployeeSalary :
======================================================================
EmpId	Project	Salary	Variable
121	P1	8000	500
321	P2	10000	1000
421	P1	12000	0
=======================================================================

1.Write an SQL query to fetch all the Employees who are also managers from the EmployeeDetails table.

SELECT DISTINCT E.FullName
FROM EmployeeDetails E
INNER JOIN EmployeeDetails M
ON E.EmpID = M.ManagerID;

2.Write an SQL query to fetch duplicate records from EmployeeDetails

SELECT FullName, ManagerId, DateOfJoining, City, COUNT(*)
FROM EmployeeDetails
GROUP BY FullName, ManagerId, DateOfJoining, City
HAVING COUNT(*) > 1;

3. Write an SQL query to remove duplicates from a table without using a temporary table.

DELETE E1 FROM EmployeeDetails E1
INNER JOIN EmployeeDetails E2 
WHERE E1.EmpId > E2.EmpId 
AND E1.FullName = E2.FullName 
AND E1.ManagerId = E2.ManagerId
AND E1.DateOfJoining = E2.DateOfJoining
AND E1.City = E2.City;

4.Write an SQL query to fetch only odd rows from the table

SELECT * FROM EmployeeDetails 
WHERE MOD (EmpId, 2) <> 0;

SELECT E.EmpId, E.Project, E.Salary
FROM (
    SELECT *, Row_Number() OVER(ORDER BY EmpId) AS RowNumber
    FROM EmployeeSalary
) E
WHERE E.RowNumber % 2 = 1;

5.Write an SQL query to fetch only even rows from the table

SELECT * FROM EmployeeDetails 
WHERE MOD (EmpId, 2) = 0;

Using Row_number in SQL server and checking that the remainder when divided by 2 is 1-

SELECT E.EmpId, E.Project, E.Salary
FROM (
    SELECT *, Row_Number() OVER(ORDER BY EmpId) AS RowNumber
    FROM EmployeeSalary
) E
WHERE E.RowNumber % 2 = 0;

6.Write an SQL query to create a new table with data and structure copied from another table.

CREATE TABLE NewTable 
SELECT * FROM EmployeeSalary;

7.Write an SQL query to fetch top n records?

In MySQL using LIMIT :

SELECT *
FROM EmployeeSalary
ORDER BY Salary DESC LIMIT N;

In SQL server using TOP command:

SELECT TOP N *
FROM EmployeeSalary
ORDER BY Salary DESC;

8.Write an SQL query to find the nth highest salary from table

SELECT TOP 1 Salary
FROM (
      SELECT DISTINCT TOP N Salary
      FROM Employee
      ORDER BY Salary DESC
      )
ORDER BY Salary ASC;

9.Write SQL query to find the 3rd highest salary

SELECT Salary
FROM EmployeeSalary Emp1
WHERE 2 = (
                SELECT COUNT( DISTINCT ( Emp2.Salary ) )
                FROM EmployeeSalary Emp2
                WHERE Emp2.Salary > Emp1.Salary
            )

10.Find 3rd max salary

select max(salary)
from emp
where salary<(select max(salary)
from emp where salary<(select max(salary)
from emp))

11.Write an SQL query to fetch records that are present in one table but not in another table.

SELECT * FROM EmployeeSalary
MINUS
SELECT * FROM ManagerSalary;

12.Write an SQL query to fetch the EmpIds that are present in both the tables –   ‘EmployeeDetails’ and ‘EmployeeSalary.

SELECT EmpId FROM 
EmployeeDetails 
where EmpId IN 
(SELECT EmpId FROM EmployeeSalary);

13. Write an SQL query to fetch the EmpIds that are present in EmployeeDetails but not in EmployeeSalary.

SELECT EmpId FROM 
EmployeeDetails 
where EmpId Not IN 
(SELECT EmpId FROM EmployeeSalary);

14.Write an SQL query to fetch the employee full names and replace the space with ‘-’.

SELECT REPLACE(FullName, ' ', '-') 
FROM EmployeeDetails;

15. Write an SQL query to display both the EmpId and ManagerId together.

SELECT CONCAT(EmpId, ManagerId) as NewId
FROM EmployeeDetails;

16.Write an SQL query to update the employee names by removing leading and trailing spaces.

UPDATE EmployeeDetails 
SET FullName = LTRIM(RTRIM(FullName));

17.Write an SQL query to fetch employee names having a salary greater than or equal to 5000 and less than or equal to 10000.

SELECT FullName 
FROM EmployeeDetails 
WHERE EmpId IN 
(SELECT EmpId FROM EmployeeSalary 
WHERE Salary BETWEEN 5000 AND 10000);

18.Write an SQL query to find the current date-time.

SELECT getdate();

19.Write an SQL query to fetch all employee records from EmployeeDetails table who have a salary record in EmployeeSalary table.

SELECT * FROM EmployeeDetails E
WHERE EXISTS
(SELECT * FROM EmployeeSalary S 
WHERE  E.EmpId = S.EmpId);

20. Write a query to fetch employee names and salary records. Display the employee details even if the salary record is not present for the employee.

SELECT E.FullName, S.Salary 
FROM EmployeeDetails E 
LEFT JOIN 
EmployeeSalary S
ON E.EmpId = S.EmpId;

21. Write an SQL query to join 3 tables.

SELECT column1, column2
FROM TableA
JOIN TableB ON TableA.Column3 = TableB.Column3
JOIN TableC ON TableA.Column4 = TableC.Column4;










